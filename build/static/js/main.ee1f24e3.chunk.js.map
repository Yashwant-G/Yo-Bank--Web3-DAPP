{"version":3,"sources":["media/tether.png","media/bank.png","components/Airdrop.js","components/Main.js","components/Navbar.js","components/ParticleSettings.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Airdrop","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","time","seconds","timer","startTimer","bind","assertThisInitialized","countDown","setInterval","setState","secondsToTime","clearInterval","secs","devisor_for_minutes","devisor_for_seconds","h","Math","floor","m","s","ceil","timeLeftVar","props","stakingBalance","airdropReleaseTokens","react_default","a","createElement","style","color","Component","Main","amount","window","web3","utils","fromWei","toFixed","id","className","scope","opacity","onSubmit","event","preventDefault","input","value","toString","toWei","stakeTokens","borderSpacing","marginLeft","marginRight","tetherBalance","ref","type","placeholder","required","src","tether","alt","height","onClick","unstakeTokens","components_Airdrop","issueTokens","Navbar","backgroundColor","href","bank","width","customerAccount","ParticleSettings","react_tsparticles_default","options","background","fpslimit","interactivity","detect_on","events","enable","mode","onHover","resize","modes","bubble","distance","duration","size","push","quantity","repulse","particles","links","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","App","loading","methods","_approval","decentralBank","_address","send","from","on","hash","_stakeTokens","document","location","reload","issueRewardTokens","_issueRewardTokens","_unstakeTokens","rewardTokenBalance","loadWeb3","loadBlockchainData","ethereuem","Web3","alert","currentProvider","eth","requestAccounts","net","getId","networkId","tetherData","Tether","networks","Contract","abi","address","_accountBalance","rewardTokenData","RewardToken","rewardToken","decentralBankData","DecentralBank","_stakingBalance","content","margin","components_Main","position","overflowY","components_ParticleSettings","components_Navbar","role","maxWidth","minHeight","Footer_App","Boolean","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee1f24e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tether.da702551.png\";","module.exports = __webpack_public_path__ + \"static/media/bank.0d511963.png\";","import React, {Component} from 'react'\n\nclass Airdrop extends Component {\n\n    constructor() {\n        super()\n        this.state = {time: {}, seconds: 20 };\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n    }\n\n    startTimer() {\n        if(this.timer === 0 && this.state.seconds > 0) {\n            this.timer = setInterval(this.countDown, 1000)\n        }\n    }\n\n    countDown() {\n        // 1 . countdown one second at a time\n        let seconds = this.state.seconds - 1\n\n        this.setState({\n            time: this.secondsToTime(seconds),\n            seconds: seconds\n        })\n        // 2. stop counting when we hit zero\n        if(seconds === 0) {\n            clearInterval(this.timer)\n        }\n    }\n\n    secondsToTime(secs) {\n        let hours, minutes, seconds\n        hours = Math.floor(secs / (60 * 60))\n\n        let devisor_for_minutes = secs % (60 * 60)\n        minutes = Math.floor(devisor_for_minutes / 60)\n\n        let devisor_for_seconds = devisor_for_minutes % 60\n        seconds = Math.ceil(devisor_for_seconds)\n\n        let obj = {\n            'h':hours,\n            'm':minutes,\n            's':seconds\n        }\n        return obj\n    }\n   \n    componentDidMount() {\n        let timeLeftVar = this.secondsToTime(this.state.seconds)\n        this.setState({time: timeLeftVar})\n    }\n\n    airdropReleaseTokens() {\n        let stakingB = this.props.stakingBalance\n        if(stakingB >= '50000000000000000000') {\n            this.startTimer()\n        }\n    }\n\n\n\n\n    render() {\n        this.airdropReleaseTokens()\n        return (\n            <div style={{color:'black'}}>{this.state.time.m}:{this.state.time.s} \n            </div>\n        )\n    }\n}\n\nexport default Airdrop;","import React, {Component} from 'react'  \nimport tether from '../media/tether.png'\nimport Airdrop from './Airdrop'\n\nclass Main extends Component {\n    render() {\n        var amount=(window.web3.utils.fromWei(this.props.stakingBalance, 'Ether')/9).toFixed(2);\n        return(\n            <div id='content' className='mt-3'>\n\n                <table className='table text-muted text-center'>\n                    <thead>\n                        <tr style={{color:'white'}}>\n                            <th scope='col'>Staking Balance</th>\n                            <th scope='col'>Reward Balance</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr style={{color:'white'}}>\n                            <td>{window.web3.utils.fromWei(this.props.stakingBalance, 'Ether')} USDT</td>\n                            {/* <td>{window.web3.utils.fromWei(this.props.rewardTokenBalance, 'Ether')} REWARD</td> */}\n                            <td>{amount} REWARD</td>\n                        </tr>\n                    </tbody>\n                </table>\n                \n                <div className='card mb=2' style={{opacity:'-moz-initial.9'}}>\n\n                    <form\n                        onSubmit={(event) => {\n                        event.preventDefault()\n                        let amount = this.input.value.toString()\n                        amount = window.web3.utils.toWei(amount,'Ether')\n                        this.props.stakeTokens(amount)\n                        // this.props.issueRewardTokens()\n                        }}\n                        className='mb-3'>\n                        <div style={{borderSpacing:'0 1em'}}>\n                            <label className='float-left' style={{marginLeft:'15px'}}><b>Stake Tokens</b></label>\n                            <span className='float-right' style={{marginRight:'8px'}}>Balance: {window.web3.utils.fromWei(this.props.tetherBalance,'Ether')}</span>\n                            <div className='input-group mb-4' style={{marginLeft:'10px'}}>\n                                <input \n                                ref={(input) => {this.input = input}}\n                                type='text'\n                                placeholder='0'\n                                required/>\n                                <div className='input-group-open' style={{marginLeft:'10px'}} >\n                                    <div className='input-group-text'>\n                                        USDT&nbsp;<img  src={tether} alt='tether' height='32'/>\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                            <button type='submit' className='btn btn-primary btn-lg btn-block'>DEPOSIT</button>\n                        </div>\n                    </form>\n\n                    <button\n                    type='submit'\n                    onClick={(event) => {\n                        event.preventDefault()\n                        this.props.unstakeTokens()\n                    }}\n                    className='btn btn-primary btn-lg btn-block'>WITHDRAW</button>\n\n                    <div className='card-body text-center' style={{color:'blue'}}>AIRDROP\n                        <Airdrop \n                        stakingBalance={this.props.stakingBalance}\n                        issueTokens={this.props.issueTokens}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default Main;\n","import React, {Component} from 'react'  \nimport bank from '../media/bank.png'\n\nclass Navbar extends Component {\n    render() {\n        return(\n            <nav className = 'navbar navbar-dark fixed-top shadow p-0' style={{backgroundColor:'black', height:'50px'}}>\n                <a href =\"/\" className='navbar-brand col-sm-3 col-md-2 mr-0'\n                style={{color:'white'}}>\n                <img src={bank} width='40' height='40' className='d-inline-block mr-2' alt='bank'/>\n                  YoBank (Decentralized Banking)\n                </a>\n                <ul className='navbar-nav px-3'>\n                    <li className='text-nowrap d-none nav-item d-sm-none d-sm-block'>\n                        <small style={{color:'white'}}>ACCOUNT NUMBER: {this.props.customerAccount}\n                        </small>\n                    </li>\n                </ul>\n\n            </nav>\n        )\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react'\nimport Particles from 'react-tsparticles';\n\nclass ParticleSettings extends Component {\nrender() {\n    return (\n        <div>\n            <Particles\n            height='1000px' width='100vw'\n            id='tsparticles'\n            options={{\n                background: {\n                    color:{\n                        value:\"#22BFC0\"\n                    },\n                },\n                fpslimit:60,\n                interactivity:{\n                    detect_on: 'canvas',\n                    events: {\n                        onClick: {\n                            enable: 'true',\n                            mode: 'push'\n                        },\n                        onHover: {\n                            enable: 'true',\n                            mode: 'repulse'\n                        },\n                        resize:'true',\n                    },\n                    modes: {\n                        bubble: {\n                          distance: 400,\n                          duration: 2,\n                          opacity: 0.8,\n                          size: 40,\n                        },\n                        push: {\n                          quantity: 4,\n                        },\n                        repulse: {\n                          distance: 200,\n                          duration: 0.4,\n                        },\n                      },\n                },\n                particles: {\n                    color: {\n                      value: \"#751877\",\n                    },\n                    links: {\n                      color: \"#000\",\n                      distance: 150,\n                      enable: true,\n                      opacity: 0.5,\n                      width: 1,\n                    },\n                    collisions: {\n                      enable: true,\n                    },\n                    move: {\n                      direction: \"none\",\n                      enable: true,\n                      outMode: \"bounce\",\n                      random: false,\n                      speed: 3,\n                      straight: false,\n                    },\n                    number: {\n                      density: {\n                        enable: true,\n                        value_area: 800,\n                      },\n                      value: 80,\n                    },\n                    opacity: {\n                      value: 0.5,\n                    },\n                    shape: {\n                      type: \"circle\",\n                    },\n                    size: {\n                      random: true,\n                      value: 5,\n                    },\n                }\n            }\n            }\n            />\n        </div>\n    )\n}}\n\nexport default ParticleSettings;\n","import React from 'react';\r\n\r\nexport default function App() {\r\n  return (\r\n      <div className='text-center p-3 fixed-bottom text-white' style={{ backgroundColor: '#000' }}>\r\n        Devloped By <a href='https://yashwant-portfolio.netlify.app/'>Yashwant</a>\r\n      </div>\r\n  );\r\n}","/* eslint-disable no-lone-blocks */\n// import './App.css'\nimport Web3 from 'web3'\nimport Main from './Main.js'\nimport Navbar from './Navbar'\nimport React, {Component} from 'react';\nimport Tether from '../truffle_abis/Tether.json'\nimport RewardToken from '../truffle_abis/RewardToken.json'\nimport DecentralBank from '../truffle_abis/DecentralBank.json'\nimport ParticleSettings from './ParticleSettings';\nimport Footer from './Footer';\n\nclass App extends Component {\n\n\tasync UNSAFE_componentWillMount() {\n\t\tawait this.loadWeb3()\n\t\tawait this.loadBlockchainData()\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props) \n\t\tthis.state = {\n\t\t\ttether: {},\n\t\t\tissueRewardTokens: {},\n\t\t\tdecentralBank: {},\n\t\t\ttetherBalance: '0',\n\t\t\trewardTokenBalance: '0',\n\t\t\tstakingBalance: '0',\n\t\t\tcustomerAccount: '0x0',\n\t\t\tloading: true\n\t\t}\n\t}\n\n\tasync loadWeb3() {\n\t\tif(window.ethereuem) {\n\t\t\twindow.web3 = new Web3(window.ethereuem)\n\t\t\ttry{\n\t\t\t\tawait window.web3.enable()\n\t\t\t} catch(error) {\n\t\t\t\twindow.alert('User account access denied by the user.')\n\t\t\t}\n\t\t} else if (window.web3) {\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\n\t\t} else {\n\t\t\twindow.alert('Opps! It seems like Ehereuem browser was nowhere to be found. You can check out MetaMask!')\n\t\t}\n\t}\n\n\tasync loadBlockchainData() {\n\t\tconst web3 = window.web3 \n\t\tconst customerAccount = await web3.eth.requestAccounts()\n\t\t// console.log(customerAccount[0]);\n\t\tthis.setState({customerAccount: customerAccount[0]})\n\t\tconst networkId = await web3.eth.net.getId()\n\t\t// console.log(networkId);\n\t\t// ******not working on brave\n\n\t\t//load Tether Contract\n\t\tconst tetherData = Tether.networks[networkId]\n\t\tif(tetherData) {\n\t\t\tconst tether = new web3.eth.Contract(Tether.abi, tetherData.address)\n\t\t\tthis.setState({tether})\n\t\t\tlet tetherBalance = await tether.methods._accountBalance(this.state.customerAccount).call()\n\t\t\tthis.setState({tetherBalance: tetherBalance.toString()})\n\t\t} else {\n\t\t\twindow.alert('Tether not deployed to the network')\n\t\t}\n\n\t\t//load RewardToken Contract\n\t\tconst rewardTokenData = RewardToken.networks[networkId]\n\t\tif(rewardTokenData) {\n\t\t\tconst rewardToken = new web3.eth.Contract(RewardToken.abi,rewardTokenData.address)\n\t\t\tthis.setState({rewardToken})\n\t\t\tlet rewardTokenBalance = await rewardToken.methods._accountBalance(this.state.customerAccount).call()\n\t\t\tthis.setState({rewardTokenBalance: rewardTokenBalance.toString()})\n\t\t} else {\n\t\t\twindow.alert('Reward Token not deployed to the network')\n\t\t}\n\n\t\t// // //load DecentralBank Contract\n\t\tconst decentralBankData = DecentralBank.networks[networkId]\n\t\tif(decentralBankData) {\n\t\t\tconst decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address)\n\t\t\tthis.setState({decentralBank})\n\t\t\tlet stakingBalance = await decentralBank.methods._stakingBalance(this.state.customerAccount).call()\n\t\t\tthis.setState({stakingBalance: stakingBalance.toString()})\n\t\t} else {\n\t\t\twindow.alert('Decentral Bank not deployed to the network')\n\t\t}\n\n\t\tthis.setState({loading: false})\n\t}\n\n\t// staking function\n\tstakeTokens = (amount) => {\n\t\tthis.setState({loading: true})\n\t\tthis.state.tether.methods._approval(this.state.decentralBank._address, amount).send({from:this.state.customerAccount}).on('transactionHash', (hash) => {\n\t\t\tthis.state.decentralBank.methods._stakeTokens(amount).send({from:this.state.customerAccount}).on('transactionHash', (hash) => {\n\t\t\t\tthis.setState({loading: false})\n\t\t\t\tdocument.location.reload(true)\n\t\t\t})\t\n\t\t})\t\n\t}\t\n\n\t// rewarding function\n\tissueRewardTokens = () => {\n\t\tthis.setState({loading: true})\n\t\tthis.state.decentralBank.methods._issueRewardTokens().send({from: this.state.customerAccount}).on('transactionHash',(hash) => {\n\t\t\tthis.setState({loading: false})\n\t\t\tdocument.location.reload(true)\n\t\t})\n\t}\n\n\t// unstaking function\n\tunstakeTokens = () => {\n\t\tthis.setState({loading: true})\n\t\tthis.state.decentralBank.methods._unstakeTokens().send({from: this.state.customerAccount}).on('transactionHash',(hash) => {\n\t\t\tthis.setState({loading: false})\n\t\t\tdocument.location.reload(true)\n\t\t})\n\t}\n\n\t//Our react code goes in here!\n\trender() {\n\t\tlet content \n\t\t{this.state.loading ? content =\n\t\t<p id='loader' className='text-center' style={{margin:'30', color:'white'}}>\n\t\tLOADING PLEASE...</p> : content = \n\t\t<Main \n\t\t\ttetherBalance={this.state.tetherBalance}\n\t\t\trewardTokenBalance={this.state.rewardTokenBalance}\n\t\t\tstakingBalance={this.state.stakingBalance}\n\t\t\tstakeTokens={this.stakeTokens}\n\t\t\tunstakeTokens={this.unstakeTokens}\n\t\t\tissueRewardTokens={this.issueRewardTokens}\n\t\t/>}\n\t\treturn(\n\t\t\n\t\t\t<div className='App' style={{position:'relative', overflowY:'hidden', height:'100vh'}}>\n\t\t\t\t<div style={{position:'absolute'}}>\n\t\t\t\t\t<ParticleSettings/>\n\t\t\t\t</div>\n\t\t\t\t<Navbar customerAccount={this.state.customerAccount}/>\n\t\t\t\t<div className='container-fluid mt-5'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<main role='main' className='col-lg-12 ml-auto mr-auto' style={{maxWidth:'600px',minHeight:'100vm'}}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</main> \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Footer/>\n\t\t\t</div>\n\t\t)\n\t}\n\t\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}